== Welcome to Placement Portal

This is all you need for a placement portal, built using Ruby on Rails framework
with all necessary search and registration page such as BE,MTECH,MCA


==Registration

Register for the companies once you get signed up with the registration page
after registration you will be logged into your account were you will get the 
information of the companies that will be coming for your branch which has been 
added by placement officer or admin.

Every registration is automated i.e. everytime you click register now the portal
internally checks and compares your marks with the company requirements, if it
found that you are not eligible with some criteria then it displays with which 
criteria you were not able to register else if it found that you are eligible 
it gives a successful registration message

It also has add ons such as dashboard news and placement news were plavement 
officer or admin can create one of these and it will be displayed it everyones 
home pages

It has automated company placement details. i.e. each time you place a student 
the news with which compnay and which student will reach the portal home page

== Roles
Authentication - AUTHLOGIC

Which means there are multiple role requirement. we totally have 5 roles
each for BE,MTECH,MCA then admin as well as placement. Each having separate home
page as for their requirement.


== Console

Initially to create an admin the console run should be done.

@user=User.create(:username=>'admin',:password=>'admin':password_confirmation=>'admin',
:role=>'admin')

now you will be able to login to the portal and can create placement as well as student
to the portal. Once you add branches to the portal the corresponding registration page
will be open for the students


== Description of Contents

The default directory structure of a generated Ruby on Rails application:

  |-- app
  |   |-- controllers
  |   |-- helpers
  |   |-- mailers
  |   |-- models
  |   `-- views
  |       `-- layouts
  |-- config
  |   |-- environments
  |   |-- initializers
  |   `-- locales
  |-- db
  |-- doc
  |-- lib
  |   `-- tasks
  |-- log
  |-- public
  |   |-- images
  |   |-- javascripts
  |   `-- stylesheets
  |-- script
  |-- test
  |   |-- fixtures
  |   |-- functional
  |   |-- integration
  |   |-- performance
  |   `-- unit
  |-- tmp
  |   |-- cache
  |   |-- pids
  |   |-- sessions
  |   `-- sockets
  `-- vendor
      `-- plugins

app
  Holds all the code that's specific to this particular application.

app/controllers
  Holds controllers that should be named like weblogs_controller.rb for
  automated URL mapping. All controllers should descend from
  ApplicationController which itself descends from ActionController::Base.

app/models
  Holds models that should be named like post.rb. Models descend from
  ActiveRecord::Base by default.

app/views
  Holds the template files for the view that should be named like
  weblogs/index.html.erb for the WeblogsController#index action. All views use
  eRuby syntax by default.

app/views/layouts
  Holds the template files for layouts to be used with views. This models the
  common header/footer method of wrapping views. In your views, define a layout
  using the <tt>layout :default</tt> and create a file named default.html.erb.
  Inside default.html.erb, call <% yield %> to render the view using this
  layout.

app/helpers
  Holds view helpers that should be named like weblogs_helper.rb. These are
  generated for you automatically when using generators for controllers.
  Helpers can be used to wrap functionality for your views into methods.

config
  Configuration files for the Rails environment, the routing map, the database,
  and other dependencies.

db
  Contains the database schema in schema.rb. db/migrate contains all the
  sequence of Migrations for your schema.

doc
  This directory is where your application documentation will be stored when
  generated using <tt>rake doc:app</tt>

lib
  Application specific libraries. Basically, any kind of custom code that
  doesn't belong under controllers, models, or helpers. This directory is in
  the load path.

public
  The directory available for the web server. Contains subdirectories for
  images, stylesheets, and javascripts. Also contains the dispatchers and the
  default HTML files. This should be set as the DOCUMENT_ROOT of your web
  server.

script
  Helper scripts for automation and generation.

test
  Unit and functional tests along with fixtures. When using the rails generate
  command, template test files will be generated for you and placed in this
  directory.

vendor
  External libraries that the application depends on. Also includes the plugins
  subdirectory. If the app has frozen rails, those gems also go here, under
  vendor/rails/. This directory is in the load path.



==THANK YOU
